[tox]
envlist =
    py27-django1.4-sqlite,
    py27-django1.4-postgres,
    py27-django1.4-mysql,

    py27-django1.5-sqlite,
    py27-django1.5-postgres,
    py27-django1.5-mysql,

    py27-django1.6-sqlite,
    py27-django1.6-postgres,
    py27-django1.6-mysql,

    py27-django1.7-sqlite,
    py27-django1.7-postgres,
    py27-django1.7-mysql,

    py34-django1.6-sqlite,
    py34-django1.6-postgres,
    #py34-django1.6-mysql

    py34-django1.7-sqlite,
    py34-django1.7-postgres,
    #py34-django1.7-mysql

[testenv]
whitelist_externals=
    mysql
    psql

# Python 2.7
# Django 1.4
[testenv:py27-django1.4-sqlite]
basepython = python2.7
deps =
    django==1.4
commands = python runtests.py --settings tests.test_sqlite

[testenv:py27-django1.4-postgres]
basepython = python2.7
deps =
    django==1.4
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py27-django1.4-mysql]
basepython = python2.7
deps =
    django==1.4
    mysql-python
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'

# Django 1.5
[testenv:py27-django1.5-sqlite]
basepython = python2.7
deps =
    django==1.5
commands = python runtests.py --settings tests.test_sqlite

[testenv:py27-django1.5-postgres]
basepython = python2.7
deps =
    django==1.5
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py27-django1.5-mysql]
basepython = python2.7
deps =
    django==1.5
    mysql-python
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'

# Django 1.6
[testenv:py27-django1.6-sqlite]
basepython = python2.7
deps =
    django==1.6
commands = python runtests.py --settings tests.test_sqlite

[testenv:py27-django1.6-postgres]
basepython = python2.7
deps =
    django==1.6
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py27-django1.6-mysql]
basepython = python2.7
deps =
    django==1.6
    mysql-python
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'


# Python 2.7 and Django 1.7
[testenv:py27-django1.7-sqlite]
basepython = python2.7
deps =
    django==1.7
commands = python runtests.py --settings tests.test_sqlite

[testenv:py27-django1.7-postgres]
basepython = python2.7
deps =
    django==1.7
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py27-django1.7-mysql]
basepython = python2.7
deps =
    django==1.7
    mysql-python
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'


# Python 3.4
# Django 1.6
[testenv:py34-django1.6-sqlite]
basepython = python3.4
deps =
    django==1.6
commands = python runtests.py --settings tests.test_sqlite

[testenv:py34-django1.6-postgres]
basepython = python3.4
deps =
    django==1.6
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py34-django1.6-mysql]
basepython = python3.4
deps =
    django==1.6
    mysql-python3
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'


# Python 3.4
# Django 1.7
[testenv:py34-django1.7-sqlite]
basepython = python3.4
deps =
    django==1.7
commands = python runtests.py --settings tests.test_sqlite

[testenv:py34-django1.7-postgres]
basepython = python3.4
deps =
    django==1.7
    psycopg2
commands =
    psql -c 'create database aggregation;' postgres
    python runtests.py --settings tests.test_postgres
    psql -c 'drop database aggregation;' postgres

[testenv:py34-django1.7-mysql]
basepython = python3.4
deps =
    django==1.7
    mysql-python3
commands =
    mysql -e 'create database aggregation;'
    python runtests.py --settings tests.test_mysql
    mysql -e 'drop database aggregation;'
