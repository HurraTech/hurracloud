# ansible-playbook -i 192.168.1.2, deploy.yml
---
- hosts: all
  user: root
  tasks:
  - name: Install Packages
    apk:
      name:
      - docker
      - py-pip
      - rsync
      - shadow
      - sudo
      - ntfs-3g
      - opam
      - g++
      - make
      - build-base
      - ocaml
      - ocaml-ocamldoc
      - ocaml-compiler-libs
      state: latest
      update_cache: yes
      repository: 
      - http://mirror.math.princeton.edu/pub/alpinelinux/latest-stable/community
      - http://mirror.math.princeton.edu/pub/alpinelinux/latest-stable/main

  - name: Install Pacakges [compose]
    pip:
      name: docker-compose

  - name: Configure System (swapoff)
    command: swapoff -a

  - name: Conifugre System (minimize swappiness)
    sysctl:
      name: vm.swappiness
      value: 0
      state: present
      sysctl_file: /etc/sysctl.d/01-hurracloud.conf
      reload: yes

  - name: Conifugre System (minimize swappiness)
    sysctl:
      name: fs.inotify.max_user_watches
      value: 524288
      state: present
      sysctl_file: /etc/sysctl.d/01-hurracloud.conf
      reload: yes      

  - name: Configure System (user watches)
    sysctl:
      name: vm.swappiness
      value: 0
      state: present
      sysctl_file: /etc/sysctl.d/01-hurracloud.conf
      reload: yes

  - name: Configure System (opam)
    command: sh -c 'OPAMYES=true opam init'

  - name: Configure System (opam)
    shell: opam init --shell-setup && eval $(opam env) && opam depext google-drive-ocamlfuse && opam install google-drive-ocamlfuse
    environment:
      OPAMYES: true

  - name: Confiugre System (google-drive-ocamlfuse)
    file:
      src: /root/.opam/default/bin/google-drive-ocamlfuse
      dest: /usr/local/bin/google-drive-ocamlfuse
      state: link

  - name: Configure manager user
    user:
      name: hurra
      shell: /bin/bash
      password: '{{ 9999999999999999999999 | random | to_uuid |  password_hash("sha512") }}'
      state: present

  - name: Generate keypair for Jawhar
    local_action: command sh -c "(yes n | ssh-keygen -t rsa -b 4096 -C "hurra-manager@hurranet.com" -N '' -f ./key) || true"

  - name: Clean stale authorized keys
    file:
      state: absent
      path: "/home/hurra/.ssh/authorized_keys"

  - name: Setup authorized key for hurra-manager
    authorized_key:
      user: hurra
      state: present
      key: '{{ item }}'
    with_file:
      - key.pub

  - name: Copying sudo file
    copy:
      src: ./sudoers
      dest: /etc/sudoers.d/hurra

  - name: Setup sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowUsers '
      line: 'AllowUsers root hurra@172.18.0.0/16'

  - name: Restart ssh service
    service:
      name: sshd
      state: restarted
    
  - name: Setup / as shared
    command: sh -c 'mount --make-shared /'

  - name: Setup environment
    lineinfile:
      path: /etc/profile
      regexp: '^export HURRA_HOME'
      line: 'export HURRA_HOME=/usr/local/src/hurracloud' ##TODO: Replace this with /usr/share/hurracloud

#### Deploy Application
  - name: Deploy Application
    file:
      name: /usr/share/hurracloud
      state: directory
      owner: root
      group: root

  - name: Create Directory Structure
    file:
      state: directory
      name: "{{ item }}"
      owner: root
      group: root
    with_items:
      - /usr/share/hurracloud
      - /usr/share/hurracloud/data

  - name: Deploy Application
    template:
      src: docker-compose.yml
      dest: /usr/share/hurracloud
      owner: root
      group: root

  - name: Start Docker
    service:
      name: docker
      state: started
      enabled: yes

  - name: Log into DockerHub
    docker_login:
      username: aimannajjar
      password: PHJ3iphUPHgFqpkh6feJNaR4fedjTm5dNRqqEfQ
